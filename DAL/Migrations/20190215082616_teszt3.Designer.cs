// <auto-generated />
using System;
using DAL.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AruhazContext))]
    [Migration("20190215082616_teszt3")]
    partial class teszt3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Model.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatName")
                        .IsRequired();

                    b.Property<int>("CatsBoss");

                    b.HasKey("CatId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DAL.Model.Category2Product", b =>
                {
                    b.Property<int>("CatId");

                    b.Property<int>("ProdId");

                    b.Property<int>("C2PId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CatId", "ProdId");

                    b.HasIndex("ProdId");

                    b.ToTable("Category2Product");
                });

            modelBuilder.Entity("DAL.Model.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImagePath")
                        .IsRequired();

                    b.Property<bool?>("IsActivePhoto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<int>("PhotoType");

                    b.HasKey("PhotoId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("DAL.Model.Photo2Product", b =>
                {
                    b.Property<int>("PhotoId");

                    b.Property<int>("ProdId");

                    b.Property<int>("P2PId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("PhotoId", "ProdId");

                    b.HasIndex("ProdId");

                    b.ToTable("Product2Photo");
                });

            modelBuilder.Entity("DAL.Model.Product", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BrutPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<bool?>("IsActiveProd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("NetPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(8, 2)")
                        .HasComputedColumnSql("[BrutPrice]/(1+[VAT])");

                    b.Property<DateTime>("ProdCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("ProdDescription");

                    b.Property<string>("ProdName")
                        .IsRequired();

                    b.Property<DateTime>("ProdPriceChanged");

                    b.Property<long>("ProdSeen");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(4, 3)");

                    b.HasKey("ProdId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DAL.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool?>("IsAdmin")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPassword")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DAL.Model.Category2Product", b =>
                {
                    b.HasOne("DAL.Model.Category", "Category")
                        .WithMany("Category2Product")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Model.Product", "Product")
                        .WithMany("Category2Product")
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Model.Photo2Product", b =>
                {
                    b.HasOne("DAL.Model.Photo", "Photo")
                        .WithMany("Product2Photo")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Model.Product", "Product")
                        .WithMany("Product2Photo")
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
